Thread ID: 6067777
User 1512058 (Parent Post) says:
<document version="2.0"><paragraph>Hello,</paragraph><paragraph>I am working through question 3.1 at the moment and having some difficulty with a few points.</paragraph><list style="number"><list-item><paragraph>Finding my epsilon value: I plotted a histogram of the distance between each point, but it appears to be about a normal distribution. In this case, should I choose value that creates multiple neighborhoods of points or use mean(dist)- X std(dist)? How can I better tune epsilon here?</paragraph></list-item><list-item><paragraph>When the question says <italic>"illustrate a few images corresponds to nodes at different parts of the graph"</italic>: Are we just showing different graph neighborhoods? Does this want something from the underlying image's original luminosity?<break/><break/>I was able to establish multiple neighborhoods with epsilon=7.5 that includes labeled indices of each point, but I wasn't confident that's what was desired given the wording of the question.</paragraph></list-item></list><paragraph/><paragraph>Are you able to help clear this up for me or provide additional resources that can get me on the right path here?</paragraph></document>

Answer from User 672141:
1. For tuning your epsilon, you can wait until you completed the ISOMAP algorithm and plot the embeddings. Visualizing the embeddings when testing different epsilon can help with the tuning.

2. A heat map is a good solution for this question. Each node represents an image at the same index. The question asks to pick a handful of nodes from the heat map and tag their respective image. It's not necessary to show different graph neighborhoods. Does this clarify the question?



  Comment from User 1512058:
  That makes sense for tuning epsilon and the image by each index.


For the heatmap,  I'm now confused on what values we will be plotting. If I show the 698x698 adjacency matrix as a graph it doesn't seem valuable for our analysis because of how little we can see. So, I'm trying to think of what value to show in the heat map that will better explain each node in 2D with coloring based on the weight.

Are you able to tell me if there is a suggested python package I can look into for this? If not, I can keep searching for a way to make this more impactful.

Comment from User 1512058:
Apologies - I found this discussion which touches on using a heat map for my second question, but I'm still confused on the images to show here.
https://edstem.org/us/courses/70719/discussion/6024567



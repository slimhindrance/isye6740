Thread ID: 5977655
User 962322 (Parent Post) says:
<document version="2.0"><paragraph>Hi, I understand that this assignment needs to be run in a reasonable amount of time, but running the Manhattan Distance on the football image at k=6 still takes a long time. For reference, this is how I am deciding how the clusters converge for both Euclidean and Manhattan distances:</paragraph><figure><image src="https://static.us.edusercontent.com/files/DoDnmu4ifrhh5eM8FizMeTqR" width="572" height="38"/></figure><paragraph>And for the Manhattan Distance, I am vectorizing the matrix in the following image, but it still takes a long time to run:</paragraph><figure><image src="https://static.us.edusercontent.com/files/Xf7WTqf17ZQQ1zZeq1XmqgA3" width="643" height="158"/></figure><paragraph>I tried stopping the iterations after 5 minutes and printed out the np.linalg.norm value from above and saw that the values were somewhat close to 0 (i.e. values of 2 or 3). My code overall is similar to the demo code, so any suggestions are helpful.  Thank you!</paragraph></document>

Answer from User 672141:
Note that the demo code is not entirely efficient and serves more as a starting point for students to work their algorithm. In addition, you can get a deduction if you set a max number of iterations rather than letting the algorithm converge on its own.

My suggestion is increasing the threshold amount to stop the algorithm to reduce run time. If you do this, remember to do the same for the other distance you are comparing as well. This way you are comparing apples to apples. Also, I advise going line by line and understand what each operation is doing, you could simplify the code further. 

Comment from User 962322:
Slight modification to my code, this should be the correct one, but it takes even longer:

If possible, it is okay to limit the amount of iterations?

